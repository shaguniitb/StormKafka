package storm.starter.bolt;

import backtype.storm.topology.BasicOutputCollector;
import backtype.storm.topology.OutputFieldsDeclarer;
import backtype.storm.topology.base.BaseBasicBolt;
import backtype.storm.tuple.Tuple;


public class PrinterBolt extends BaseRichBolt {

   @Override
   public void prepare(Map map, TopologyContext topologyContext, OutputCollector outputCollector) {
        _collector = outputCollector;

   }
	
  @Override
  public void execute(Tuple tuple) {
	  String text = tuple.getStringByField(TwitterSpout.MESSAGE);
	  StringTokenizer st = new StringTokenizer(text);

      System.out.println("---- Split by space ------");
      while (st.hasMoreElements()) {
          String term = (String) st.nextElement();
          if (StringUtils.startsWith(term, "#"))
              _collector.emit(new Values(term));
      }

      // Confirm that this tuple has been treated.
      _collector.ack(tuple);
  }

  @Override
  public void declareOutputFields(OutputFieldsDeclarer outputFieldsDeclarer) {
	  outputFieldsDeclarer.declare(new Fields("entity"));
  }
  
  @Override
  public void cleanup() {
      super.cleanup();

  }

}
